
// import angular material and include core mixins
@use '@angular/material' as mat;
@include mat.core();

// import fonts and icons
@import url("https://fonts.googleapis.com/css2?family=Italiana&family=Roboto+Mono:ital@0;1&display=swap");
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css");

// override default bootstrap globals
$primary: rgb(133, 176, 85);
$secondary: #343434;
$body-bg: rgb(255,253,246);
$font-family-base: "Roboto Mono", monospace;
$input-bg: white;
$input-placeholder-color: #a1a1a1;

// import Bootstrap
@import "bootstrap/scss/bootstrap";

// defn a color palette to be used by Angular Material
$my-palette: (
  50: lighten($primary, 40%),
  100: lighten($primary, 30%),
  200: lighten($primary, 20%),
  300: lighten($primary, 10%),
  400: $primary,
  500: darken($primary, 5%),
  600: darken($primary, 10%),
  700: darken($primary, 15%),
  800: darken($primary, 20%),
  900: darken($primary, 25%),
  contrast: (
    50: lighten($secondary, 40%),
    100: lighten($secondary, 30%),
    200: lighten($secondary, 20%),
    300: lighten($secondary, 10%),
    400: $secondary,
    500: darken($secondary, 10%),
    600: darken($secondary, 20%),
    700: darken($secondary, 30%),
    800: darken($secondary, 40%),
    900: darken($secondary, 50%),
  )
);

// create material color palette from defined palette
$material-primary-palette: mat.define-palette($my-palette);

// defn typography to be used by Angular Material
$my-typography: mat.define-typography-config(
  $font-family: var(--bs-body-font-family),
);

// defn theme to be used by Angular Material
$material-application-theme: mat.define-light-theme((
  color: (
    primary: $material-primary-palette,
    accent: $material-primary-palette,
  ),
  density: 0,
  typography: $my-typography
));

// mixin theme for Angular Material
@include mat.core-theme($material-application-theme);
@include mat.select-theme($material-application-theme);
@include mat.datepicker-theme($material-application-theme);
@include mat.form-field-theme($material-application-theme);

// defn page body rules
body {
  width: 100vw;
  padding: 0;
  margin: 0;
}

p {
  margin: 0;
}

// defn global classes
.salon-btn-primary {
  @extend .btn;
  background-color: $primary;
  color: white;
  margin-right: 5px;
}

.salon-btn-primary:hover {
  background-color: lighten($primary, 10%);
  color: white;
}

.salon-btn-fancy,
.salon-btn-fancy-header,
.salon-btn-fancy-bg {
  border: none;
  background: none;
  font-family: "Roboto Mono", monospace;
  font-weight: 500;
  font-size: 25px;

  &:hover {
    text-decoration: underline;
  }

  &:focus, &:disabled {
    text-decoration: underline;
    color: rgb(32, 32, 32);
  }
}

.salon-btn-fancy-header{
  color: white;
}

.salon-btn-fancy,
.salon-btn-fancy-bg{
  color: $primary;
}

.salon-btn-primary-outline,
.salon-btn-primary-outline:active,
.salon-btn-primary-outline:visited,
.salon-btn-primary-outline:focus{
  @extend .btn;
  background-color: $body-bg;
  border-color: $primary;
  color: $primary;
  margin-right: 5px;
}

.salon-btn-primary-outline:hover {
  background-color: $primary;
  color: $body-bg;
}

.salon-btn-secondary-outline {
  @extend .btn;
  background-color: $body-bg;
  border-color: $secondary;
  color: $secondary;
  margin-right: 5px;
}

.salon-btn-secondary-outline:hover {
  background-color: $primary;
  color: $body-bg;
}

.search-result-links {
  text-decoration: underline;
}

.search-result-links:hover {
  color: var(--bs-primary);
}

.salon-subheader {
  color: var(--bs-primary);
  font-size: 100px;
  font-family: "Italiana", sans-serif;
  font-weight: 800;
  text-align: center;
  padding-top: 50px;
}

.salon-employee-img {
  object-fit: cover;
  border-radius: 50%
}

//small text
.salon-plaintext {
  color: rgb(32, 32, 32);
  font-family: "Roboto Mono", monospace;
  font-size: 16px;
}


@keyframes loadingAnimation{
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

.salon-fx-load-in {
  animation: loadingAnimation 1.5s;
}

//hover on images animation
.salon-fx-bouncy {
  border: 0 solid var(--bs-primary);
  transition: border .2s, transform .2s;

  &:hover {
    transform: scale(1.05);
    border-width: 5px;
  }
}
